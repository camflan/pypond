// Take the string/wire format as generated by the python library
// as an arg, see if that can be converted to JSON, and instantiated
// into a pond.TimeSeries object. Then round trip the wire format
// back to the calling code to see if that can be instantiated
// and checked against the origianl data structure.

var pond = require('../../pond')
var myArgs = process.argv.slice(2);

var wire;
var series;

switch(myArgs[0]) {
    case 'ping':
        console.log('pong');
        // Explicitly exit on this ping test so subsequent output
        // does not confuse the test in the python unittest setUp()
        // method.
        process.exit(0)
        break;
    case 'event':
        wire = JSON.parse(myArgs[1]);
        series = new pond.TimeSeries(wire);
        break;
    default:
        console.log('did not get valid args');
        process.exit(-1)
}

console.log(series.toString());

process.exit(0);
